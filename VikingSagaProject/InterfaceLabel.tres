[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://b5nnb11cqk4yx"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_gisv7"]
constant = Color(1, 0.211765, 1, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_dup0x"]
constant = 0.5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

// Uniform to drive pulsation animation
uniform float u_time : hint_range(0, 10);

void vertex() {
    // Compute a pulsating alpha value based on time.
    float pulsate = 0.5 + 0.25 * sin(u_time);
    COLOR.a = pulsate;
}

void fragment() {
    // Base color constant (from VisualShaderNodeColorConstant)
    vec4 base_color = vec4(1.000000, 0.211765, 1.000000, 1.000000);
    // Modulate brightness using time-based pulsation
    float pulse = 0.75 + 0.25 * sin(u_time);
    COLOR.rgb = base_color.rgb * pulse;
}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(1380, 180)
nodes/vertex/2/node = SubResource("VisualShaderNodeFloatConstant_dup0x")
nodes/vertex/2/position = Vector2(800, 180)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 3)
nodes/fragment/0/position = Vector2(1720, 160)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorConstant_gisv7")
nodes/fragment/6/position = Vector2(580, 80)
nodes/fragment/connections = PackedInt32Array(6, 0, 0, 0)
nodes/light/0/position = Vector2(1460, 180)
